# The format of this file is YAML
#
# VRPipe will load its configuration settings from one or more files named
# .vrpipe_config[.production|.development].yml found in these directories, in
# order of precedence:
# 1) The current directory
# 2) Your home directory
# 3) The directory pointed to by the environment variable $VRPIPE_CONFIG_DIR
#
# .vrpipe_config.yml files are always read, and can be used to define settings
# common to both production and development deployments.
# .vrpipe_config.production.yml files are only read in a production context:
# either a --deployment production option has been passed to the vrpipe
# executable, or the environment variable $VRPIPE_DEPLOYMENT has been set to
# 'production'.
# A similar story applies for .vrpipe_config.development.yml files, which are
# used when things are set to 'development'.
# The default deployment is production.
#
# If a setting is found in none of the files read, then an environment variable
# is checked: VRPIPE_<setting name in caps>. Eg. to define the daemon_port
# option you might do:
# export VRPIPE_DAEMON_PORT="11301"
#
# Note that all worker nodes need to be able to see your desired set of config
# files, so either define them in environment variables or put the config files
# on a disc that is mounted and shared across all your compute nodes.


# daemon_port: What port should the main vrpipe daemon listen on?
# This defaults to 11301
# NB: It is very important to have different settings for your production
# daemon and your development daemon. If you have multiple developers running
# tests, each individual person should have their own unique daemon_port 
# specified in their personal .vrpipe_config.development.yml file.
#
# Before being able to use vrpipe you must start the daemon by running 'vrpipe
# daemon'. It will start listening on the specified port on your local host.
# Your other invocations of 'vrpipe' also use this option to know what port to
# connect to, but they'll only succeed if you run them from the same host you
# started the daemon on, or if you have set the daemon_host option to the
# host you started the daemon on.
# vrpipe commands that are spawned by the daemon itself are given the real
# ip address of the host the daemon is running on, so these commands do not need
# daemon_host to be set.
# For multi-machine systems it is required that all hosts that could end up
# running a vrpipe command be able to do tcp communication with the host you
# launch the daemon on.
daemon_port: "11301"

# daemon_host: What host was the vrpipe daemon started on?
# This is optional and defaults to "localhost".
#
# This option determines where vrpipe commands (other than the daemon command)
# try and connect to your vrpipe daemon. You only need to set this if you plan
# on running vrpipe commands yourself on a host that is different to the one you
# you plan to start the vrpipe daemon on.
# For more details, see the notes for the daemon_port option above.
daemon_host: "localhost"